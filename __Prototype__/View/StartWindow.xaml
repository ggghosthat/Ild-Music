<Window x:Class="Ild_Music_MVVM_.View.StartWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:ui="clr-namespace:Ild_Music_MVVM_.View.UIControls"
        xmlns:converters="clr-namespace:Ild_Music_MVVM_.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="555" Width="1100"
        WindowStyle="None" ResizeMode="NoResize"
        Background="#1b2b33" WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <converters:PlayerActivityConverter x:Key="PlayerActivityConverter"/>
        <converters:PlayerTimeConverter x:Key="PlayerTimeConverter"/>

        <FontFamily x:Key="SigmarOne">Fonts/#Sigmar_One</FontFamily>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
       
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
       
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Width" Value="45"/>
            <Setter Property="Margin" Value="2,10,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#bdc9fc"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="CardButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Height" Value="180"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="15" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="AliceBlue">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="Red" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                        CanContentScroll="{TemplateBinding CanContentScroll}" 
                                        CanHorizontallyScroll="False" 
                                        CanVerticallyScroll="False" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Content="{TemplateBinding Content}"
                                        Grid.RowSpan="2"
                                        Margin="{TemplateBinding Padding}"
                                        Grid.ColumnSpan="2"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" 
                           AutomationProperties.AutomationId="VerticalScrollBar" 
                           Cursor="Arrow"
                           Grid.Column="1" 
                           Maximum="{TemplateBinding ScrollableHeight}"
                           Minimum="0"
                           Grid.Row="0"
                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                           ViewportSize="{TemplateBinding ViewportHeight}"
                           Width="8"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar"
                           AutomationProperties.AutomationId="HorizontalScrollBar"
                           Cursor="Arrow"
                           Grid.Column="0"
                           Maximum="{TemplateBinding ScrollableWidth}"
                           Minimum="0"
                           Orientation="Horizontal"
                           Grid.Row="1" 
                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                           ViewportSize="{TemplateBinding ViewportWidth}" 
                           Height="8"/>
            </Grid>
        </ControlTemplate>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HorizontalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="4" />
                            </Grid.ColumnDefinitions>
                            <Ellipse Grid.Column="0" Grid.ColumnSpan="2" Fill="#1b88e8" />
                            <Rectangle Grid.Column="1" Grid.ColumnSpan="3" Fill="#1b88e8" />
                            <Ellipse Grid.Column="3" Grid.ColumnSpan="2" Fill="#1b88e8" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VerticalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4" />
                                <RowDefinition Height="4" />
                                <RowDefinition />
                                <RowDefinition Height="4" />
                                <RowDefinition Height="4" />
                            </Grid.RowDefinitions>
                            <Ellipse Grid.Row="0" Grid.RowSpan="2" Fill="#1b88e8" />
                            <Rectangle Grid.Row="1" Grid.RowSpan="3" Fill="#1b88e8" />
                            <Ellipse Grid.Row="3" Grid.RowSpan="2" Fill="#1b88e8" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="#1b88e8"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="MinWidth" Value="10"/>
            <Setter Property="Background" Value="AliceBlue"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*"/>
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource VerticalThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" Width="8"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="10"/>
                    <Setter Property="MinHeight" Value="10"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.00001*"/>
                                    </Grid.ColumnDefinitions>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" Style="{DynamicResource HorizontalThumb}" Height="8"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SidebarOver" TargetType="StackPanel">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1b1f21"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="#1b2b33"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SlideBarImage" TargetType="Path">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Value="True">
                    <Setter Property="Fill" Value="Aqua"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Value="False">
                    <Setter Property="Fill" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CustomFont1" TargetType="TextBlock">
            <Setter Property="TextElement.FontFamily" Value="/UI/Fonts/#Promt"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Value="True">
                    <Setter Property="Foreground" Value="Aqua"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Value="False">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="PlayerStyle" TargetType="Path">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="White"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Fill" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BorderWindowButton" TargetType="Border">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Height" Value="15"/>
                    <Setter Property="CornerRadius" Value="0,0,7,7"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Height" Value="7"/>
                    <Setter Property="CornerRadius" Value="0,0,3,3"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PlayButtonStyle" TargetType="Path">
            <Style.Triggers>
                <DataTrigger Binding="{Binding PlayerEntity.PlayerState}" Value="ACTIVE">
                </DataTrigger>
                <DataTrigger Binding="{Binding PlayerEntity.PlayerState}" Value="PAUSED">
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border  BorderThickness="1"
                                 BorderBrush="#6d7c7a"
                                 Background="#6d7c7a"
                                 Height="5"
                                 CornerRadius="0,2,2,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" 
                                Background="Aqua" 
                                BorderThickness="1" 
                                BorderBrush="Aqua"
                                Height="5"
                                CornerRadius="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse Width="7" Height="7" Fill="white"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VolumeSliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse Width="7" Height="7" Fill="Aqua"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  Background="#6d7c7a" BorderThickness="0"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomSlider" TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Thumb>
                            <Thumb.Template>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Ellipse Height="7" Width="7" Fill="White"/>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid RenderTransformOrigin="0.548,0.512">
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="896"/>
        </Grid.ColumnDefinitions>

       <!--Header label-->
        <Grid Background="#16242b"
              Grid.ColumnSpan="2" Margin="0,-2,0,2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Column="0">
                <TextBlock Text="ILD-MUSIC"
                       Foreground="White"
                       FontSize="35"
                       VerticalAlignment="Top"
                       FontFamily="Showcard Gothic"
                       Width="180" 
                       Height="38" 
                       Margin="10,0,0,0"/>
                <TextBlock Text="prototype"
                       Foreground="White"
                       FontSize="15"
                       FontWeight="Bold"
                       VerticalAlignment="Bottom"
                       HorizontalAlignment="Left"
                       Height="24" />

            </StackPanel>
            <StackPanel x:Name="DragPanel"
                        Grid.Column="1"
                        Grid.Row="0"
                        MouseDown="DragWindow" 
                        Background="Transparent"/>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Grid.Column="2">
                <Border x:Name="btnMinimizeWindow"
                        Width="30"
                        Background="#0be0c2"
                        VerticalAlignment="Top"
                        Style="{StaticResource BorderWindowButton}" MouseLeftButtonDown="btnMinimizeWindow_MouseLeftButtonDown">
                </Border>
                <Border x:Name="btnCloseWindow"
                        Width="30"
                        Background="#e00b29"
                        VerticalAlignment="Top"
                        Style="{StaticResource BorderWindowButton}" MouseLeftButtonDown="btnCloseWindow_MouseLeftButtonDown">
                </Border>
            </StackPanel>
        </Grid>

        <!--Sidebar-->
        <StackPanel Grid.Row="1"
                    Grid.Column="0"
                    Background="Transparent">
            <StackPanel Name="Home" 
                        Height="45"
                        Orientation="Horizontal"
                        Style="{StaticResource SidebarOver}" 
                        MouseLeftButtonDown="HomeSlideClick">

                <Viewbox Width="40" Height="40" Margin="5,0">
                    <Canvas Width="24" Height="24">
                        <Path Data="M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z" 
                              Style="{StaticResource SlideBarImage}"/>
                    </Canvas>
                </Viewbox>
                <TextBlock Margin="10 0 0 0"
                           Text="Home" 
                           VerticalAlignment="Center"
                           FontSize="25"
                           Style="{StaticResource CustomFont1}"
                           FontWeight="Medium"/>
            </StackPanel>

            <StackPanel Name="Playlists"
                        Height="45" 
                        Orientation="Horizontal" 
                        Style="{StaticResource SidebarOver}"
                        MouseLeftButtonDown="PlaylistSlideClick">
                <Viewbox Width="40" Height="40" Margin="5,0">
                    <Canvas Width="24" Height="24">
                        <Path Data="M15,6H3V8H15V6M15,10H3V12H15V10M3,16H11V14H3V16M17,6V14.18C16.69,14.07 16.35,14 16,14A3,3 0 0,0 13,17A3,3 0 0,0 16,20A3,3 0 0,0 19,17V8H22V6H17Z"
                              Style="{StaticResource SlideBarImage}"/>
                    </Canvas>
                </Viewbox>
                <TextBlock Margin="10 0 0 0"
                           Text="Playlists" 
                           VerticalAlignment="Center"
                           FontSize="25"
                           Style="{StaticResource CustomFont1}"
                           FontWeight="Medium"/>
            </StackPanel>

            <StackPanel Name="Tracks" 
                        Height="45" 
                        Orientation="Horizontal"
                        Style="{StaticResource SidebarOver}"
                        MouseLeftButtonDown="TracksSlideClick">
                <Viewbox Width="48" Height="48">
                    <Canvas Width="24" Height="24">
                        <Path Data="M17 9.5V7.5L15 8.1V5.5H13V8.7L11 9.3V6.5H9V9.9L7 10.5V12.5L9 11.9V13.9L7 14.5V16.5L9 15.9V18.5H11V15.3L13 14.7V17.5H15V14.1L17 13.5V11.5L15 12.1V10.1L17 9.5M13 12.7L11 13.3V11.3L13 10.7V12.7Z" 
                              Style="{StaticResource SlideBarImage}"/>
                    </Canvas>
                </Viewbox>
                <TextBlock Margin="10 0 0 0"
                           Text="Tracks" 
                           VerticalAlignment="Center"
                           FontSize="25"
                           Style="{StaticResource CustomFont1}"
                           FontWeight="Medium"/>
            </StackPanel>

            <StackPanel Name="Artists" 
                        Height="45" 
                        Orientation="Horizontal"
                        Style="{StaticResource SidebarOver}"
                        MouseLeftButtonDown="ArtistsSlideClick">
                <Viewbox Width="40" Height="40" Margin="5,0">
                    <Canvas Width="24" Height="24">
                        <Path Data="M11,14C12,14 13.05,14.16 14.2,14.44C13.39,15.31 13,16.33 13,17.5C13,18.39 13.25,19.23 13.78,20H3V18C3,16.81 3.91,15.85 5.74,15.12C7.57,14.38 9.33,14 11,14M11,12C9.92,12 9,11.61 8.18,10.83C7.38,10.05 7,9.11 7,8C7,6.92 7.38,6 8.18,5.18C9,4.38 9.92,4 11,4C12.11,4 13.05,4.38 13.83,5.18C14.61,6 15,6.92 15,8C15,9.11 14.61,10.05 13.83,10.83C13.05,11.61 12.11,12 11,12M18.5,10H20L22,10V12H20V17.5A2.5,2.5 0 0,1 17.5,20A2.5,2.5 0 0,1 15,17.5A2.5,2.5 0 0,1 17.5,15C17.86,15 18.19,15.07 18.5,15.21V10Z" 
                              Style="{StaticResource SlideBarImage}"/>
                    </Canvas>
                </Viewbox>
                <TextBlock Margin="10 0 0 0"
                           Text="Artists" 
                           VerticalAlignment="Center"
                           FontSize="25"
                           Style="{StaticResource CustomFont1}"
                           FontWeight="Medium"/>
            </StackPanel>

            <StackPanel Name="Platform" 
                        Height="45" 
                        Orientation="Horizontal"
                        Style="{StaticResource SidebarOver}" MouseLeftButtonDown="PlatformSliderClick">
                <Viewbox Width="48" Height="48" Margin="5,0">
                    <Canvas Width="24" Height="24">
                        <Path Fill="White" Data="M19.5 17C19.37 17 19.24 17 19.11 17.04L17.5 13.79C17.95 13.34 18.25 12.71 18.25 12C18.25 10.62 17.13 9.5 15.75 9.5C15.62 9.5 15.5 9.5 15.36 9.54L13.73 6.29C14.21 5.84 14.5 5.21 14.5 4.5C14.5 3.12 13.38 2 12 2S9.5 3.12 9.5 4.5C9.5 5.21 9.79 5.84 10.26 6.29L8.64 9.54C8.5 9.5 8.38 9.5 8.25 9.5C6.87 9.5 5.75 10.62 5.75 12C5.75 12.71 6.05 13.34 6.5 13.79L4.89 17.04C4.76 17 4.63 17 4.5 17C3.12 17 2 18.12 2 19.5C2 20.88 3.12 22 4.5 22S7 20.88 7 19.5C7 18.8 6.71 18.16 6.24 17.71L7.86 14.46C8 14.5 8.12 14.5 8.25 14.5C8.38 14.5 8.5 14.5 8.64 14.46L10.27 17.71C9.8 18.16 9.5 18.8 9.5 19.5C9.5 20.88 10.62 22 12 22S14.5 20.88 14.5 19.5C14.5 18.12 13.38 17 12 17C11.87 17 11.74 17 11.61 17.04L10 13.79C10.46 13.34 10.75 12.71 10.75 12S10.46 10.66 10 10.21L11.61 6.96C11.74 7 11.87 7 12 7S12.26 7 12.39 6.96L14 10.21C13.55 10.66 13.25 11.3 13.25 12C13.25 13.38 14.37 14.5 15.75 14.5C15.88 14.5 16 14.5 16.14 14.46L17.77 17.71C17.3 18.16 17 18.8 17 19.5C17 20.88 18.12 22 19.5 22S22 20.88 22 19.5C22 18.12 20.88 17 19.5 17Z" />
                    </Canvas>
                </Viewbox>
                <TextBlock Margin="10 0 0 0"
                           Text="Platform" 
                           VerticalAlignment="Center"
                           FontSize="25"
                           Style="{StaticResource CustomFont1}"
                           FontWeight="Medium"/>
            </StackPanel>
        </StackPanel>

        <!--Search bar-->
        <StackPanel Grid.Row="0" Grid.Column="1">
        </StackPanel>

        <!--Display area-->
        <StackPanel Grid.Column="1" 
                    Grid.Row="1"
                    Background="#142026">
            <ContentControl x:Name="ContentHolder"
                        Content="{Binding CurrenttViewModelItem}">
            </ContentControl>

        </StackPanel>

        <!--Player area-->
        <StackPanel x:Name="Player" 
                    Grid.Row="1" Grid.ColumnSpan="2"  
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Bottom"
                    Background="#1b2333" 
                    Orientation="Horizontal" 
                    Height="35" Width="1100">
            <StackPanel x:Name="Previous"
                            Height="25"
                            Width="25"
                            Background="Transparent"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="100 0 0 0">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseLeftButtonDown">
                        <b:InvokeCommandAction Command="{Binding PreviousCommand}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <Border x:Name="brPrev"
                        CornerRadius="5"
                        Background="Transparent">
                    <Viewbox Width="24" Height="24">
                        <Canvas Width="24" Height="24">
                            <Path Style="{StaticResource PlayerStyle}" Data="M20,5V19L13,12M6,5V19H4V5M13,5V19L6,12" />
                        </Canvas>
                    </Viewbox>
                </Border>
            </StackPanel>

            <StackPanel x:Name="Play"
                            Height="25"
                            Width="25"
                            Background="Transparent"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="10 0 0 0">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseLeftButtonDown">
                        <b:InvokeCommandAction Command="{Binding KickCommand}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <Border x:Name="brPlay"
                        CornerRadius="5"
                        Background="Transparent">
                    <Viewbox Width="24" Height="24">
                        <Canvas Width="24" Height="24">
                            <Path Data="{Binding IsPlayerActive, Converter={StaticResource PlayerActivityConverter}}"
                                  Style="{StaticResource PlayerStyle}"/>
                        </Canvas>
                    </Viewbox>
                </Border>
            </StackPanel>

            <StackPanel x:Name="Next"
                            Height="25"
                            Width="25"
                            Background="Transparent"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="10 0 0 0">
                <Border x:Name="brNext"
                        CornerRadius="5"
                        Background="Transparent">
                    <Viewbox Width="24" Height="24">
                        <Canvas Width="24" Height="24">
                            <Path Style="{StaticResource PlayerStyle}" Data="M4,5V19L11,12M18,5V19H20V5M11,5V19L18,12" />
                        </Canvas>
                    </Viewbox>
                </Border>
            </StackPanel>

            <StackPanel x:Name="Shuffle"
                            Height="25"
                            Width="25"
                            Background="Transparent"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="25 0 0 0" >
                <Border x:Name="brShuffle"
                        CornerRadius="5"
                        Background="Transparent">
                    <Viewbox Width="24" Height="24">
                        <Canvas Width="24" Height="24">
                            <Path Style="{StaticResource PlayerStyle}" Data="M17,3L22.25,7.5L17,12L22.25,16.5L17,21V18H14.26L11.44,15.18L13.56,13.06L15.5,15H17V12L17,9H15.5L6.5,18H2V15H5.26L14.26,6H17V3M2,6H6.5L9.32,8.82L7.2,10.94L5.26,9H2V6Z" />
                        </Canvas>
                    </Viewbox>
                </Border>
            </StackPanel>

            <StackPanel x:Name="Repeat"
                            Height="25"
                            Width="25"
                            Background="Transparent"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="10 0 0 0">
                <Border x:Name="brRepeat"
                        CornerRadius="5"
                        Background="Transparent">
                    <Viewbox Width="24" Height="24">
                        <Canvas Width="24" Height="24">
                            <Path Style="{StaticResource PlayerStyle}" Data="M6,5.75L10.25,10H7V16H13.5L15.5,18H7A2,2 0 0,1 5,16V10H1.75L6,5.75M18,18.25L13.75,14H17V8H10.5L8.5,6H17A2,2 0 0,1 19,8V14H22.25L18,18.25Z" />
                        </Canvas>
                    </Viewbox>
                </Border>
            </StackPanel>

            <StackPanel x:Name="Break"
                            Height="25"
                            Width="25"
                            Background="Transparent"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="10 0 0 0">
                <Border x:Name="brBreak"
                        CornerRadius="5"
                        Background="Transparent">
                    <Viewbox Width="24" Height="24">
                        <Canvas Width="24" Height="24">
                            <Path Style="{StaticResource PlayerStyle}" Data="M8.27,3L3,8.27V15.73L8.27,21H15.73L21,15.73V8.27L15.73,3M8.41,7L12,10.59L15.59,7L17,8.41L13.41,12L17,15.59L15.59,17L12,13.41L8.41,17L7,15.59L10.59,12L7,8.41" />
                        </Canvas>
                    </Viewbox>
                </Border>
            </StackPanel>

            <StackPanel x:Name="InfoArea" 
                        Orientation="Horizontal"
                        HorizontalAlignment="Left"
                        Height="auto"
                        Width="auto">

                <StackPanel Grid.Column="0"
                                Orientation="Vertical"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                    <Label Content="This is your track"
                               FontSize="10"
                               FontWeight="Medium"
                               HorizontalAlignment="Left"
                               Margin="10, -5"
                               Foreground="White" 
                               Height="22"/>

                    <StackPanel Orientation="Horizontal" Margin="10,0">
                        <StackPanel>
                            <TextBlock Name="lblCurrentTime"                                   
                                   FontSize="14"
                                   FontWeight="Medium"
                                   Foreground="White" 
                                   Padding="0"
                                   Height="30"
                                   Text="{Binding CurrentTime}">
                            </TextBlock>
                        </StackPanel>
                        <StackPanel>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseLeftButtonDown">
                                    <b:InvokeCommandAction Command="{Binding TrackTimeChangedCommand}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>

                            <Slider x:Name="sldTrackDuration"
                                    Style="{DynamicResource Horizontal_Slider}" 
                                    Width="500"
                                    Margin="15,0"
                                    IsMoveToPointEnabled="True"
                                    Value="0"
                                    Background="#6d7c7a"
                                    Thumb.DragCompleted="TrackDuration_DragCompleted"
                                    Thumb.DragStarted="TrackDuration_DragStarted"/>
                        </StackPanel>
                        <StackPanel>
                            <TextBlock Name="lblTotatTime"
                                   Text="{Binding TotalTime}"
                                   FontSize="14"
                                   FontWeight="Medium"
                                   Foreground="White" 
                                   Padding="0"
                                   Height="30"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>

    </Grid>
</Window>
